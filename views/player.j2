{% extends "base.j2" %}

{% block js_head %}
{{ super() }}
<script type="text/javascript" src="/static/js/swfobject.js"></script>    
{% endblock %}


{% block js_body %}
{{ super() }}

<script type="text/javascript">
var params = { allowScriptAccess: "always" };
var atts = { id: "ytplayer" };
swfobject.embedSWF("http://www.youtube.com/apiplayer?enablejsapi=1&version=3",
					"ytplayer", "425", "356", "8", null, null, params, atts);


actions = 
{
	// Handles the init action sent from the server.
	// Expects the following fields in data: video_id, and video_time
	// Doesn't return anything.
	init: function(data)
	{
		var player = document.getElementById("ytplayer");
		player.loadVideoById(data.video_id, data.video_time);
		player.playVideo();
		// Just to keep me from going insane until the volume controls are implemented.
		player.setVolume(15);
	}
}


// Websocket stuff
function onYouTubePlayerReady(playerid)
{
	if (!window.WebSocket)
	{
		if (window.MozWebSocket)
		{
			window.WebSocket = window.MozWebSocket;
		}
		else
		{
			alert("Your browser doesn't support WebSockets.");
		}
	}


	ws = new WebSocket('ws://127.0.0.1:8000/wsapi');

	ws.onopen = function(evt)
	{
		ws.send(JSON.stringify({
			action: "init"
		}));
	}

	ws.onmessage = function(evt)
	{
		var data;
		var action;

		try
		{
			data = JSON.parse(evt.data);
			action = data.action;
		}
		catch (SyntaxError) { }

		if (action === undefined)
		{
			alert("Server sent invalid message. Not good.");
			console.log("Server sent invalid message:");
			console.log(evt.data);
			ws.close();
		}

		var actionFunc = actions[action]
		if (actionFunc === undefined)
		{
			console.log("Server sent unknown action '" + actionFunc + "'. Ignoring.");
		}
		else
		{
			actionFunc(data);
		}
	}

	ws.onclose = function(evt)
	{
		alert("WebSocket closed!");
	}

	$('#send').submit(function()
	{
		ws.send($('input:first').val());
		$('input:first').val('').focus();
		return false;
	});
};

</script>

{% endblock %}



{% block content %}

<div id="ytplayer">
	You need Flash player 8+ and JavaScript enabled to view this video.
</div>

{% endblock %}


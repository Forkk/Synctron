{% extends "base.j2" %}

{% block js_head %}
{{ super() }}
<script type="text/javascript" src="//cdn.sublimevideo.net/js/xj8gmt4v.js"></script>   
{% endblock %}


{% block js_body %}
{{ super() }}

<script type="text/javascript">
room_id = "{{ room_id }}"

actions = 
{
	error: function(data, sock)
	{
		console.log(JSON.stringify(data));
		alert(data.reason_msg);
	},

	// Handles the init action sent from the server.
	// Expects the following fields in data: video_id
	// Doesn't return anything.
	setvideo: function(data, sock)
	{
		$("#player-div").html('<video id="player" class="sublime" width="640" height="360" data-uid="" data-youtube-id="' + data.video_id + '" preload="none"></video>');
		sublime.load();
		sublime.ready(function()
		{
			var player = sublime.player("player");
			player.play();

			player.on({
				metadata: function(p)
				{
					console.log("works")
					sock.send(JSON.stringify({ action: "sync", room_id: room_id }));
					// Send sync ten seconds later to ensure that we're truly synced-up.
					setTimeout(function()
					{
						sock.send(JSON.stringify({ action: "sync", room_id: room_id }));
					}, (10*1000));
				}
			});
		});
	},

	// Handles the sync action sent from the server.
	// Expects the following fields: video_time
	sync: function(data, sock)
	{
		sublime.player("player").seekTo(data.video_time);
	}
}


// Websocket stuff
$(document).ready(function()
{
	if (!window.WebSocket)
	{
		if (window.MozWebSocket)
		{
			window.WebSocket = window.MozWebSocket;
		}
		else
		{
			alert("Your browser doesn't support WebSockets.");
		}
	}


	ws = new WebSocket('ws://127.0.0.1:8000/wsapi');

	ws.onopen = function(evt)
	{
		ws.send(JSON.stringify({
			action: "init",
			room_id: room_id,
		}));
	}

	ws.onmessage = function(evt)
	{
		console.log("Message from server: " + evt.data);

		var data;
		var action;

		try
		{
			data = JSON.parse(evt.data);
			action = data.action;
		}
		catch (SyntaxError) { }

		if (action === undefined)
		{
			alert("Server sent invalid message. Not good.");
			console.log("Server sent invalid message:");
			console.log(evt.data);
			ws.close();
		}

		var actionFunc = actions[action]
		if (actionFunc === undefined)
		{
			console.log("Server sent unknown action '" + actionFunc + "'. Ignoring.");
		}
		else
		{
			actionFunc(data, ws);
		}
	}

	ws.onclose = function(evt)
	{
		console.log("WebSocket closed.");
	}

	$('#send').submit(function()
	{
		ws.send($('input:first').val());
		$('input:first').val('').focus();
		return false;
	});
});

</script>

{% endblock %}



{% block content %}

<div id="player-div"></div>

{% endblock %}

